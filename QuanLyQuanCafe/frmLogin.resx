<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>